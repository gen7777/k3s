---
apiVersion: v1
kind: Namespace
metadata:
  name: sonarqube
  labels:
    section: tools
    app: sonarqube

---
apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limit-range
  namespace: sonarqube
spec:
  limits:
  - default:
      memory: 512Mi
      cpu: "0.1"
    defaultRequest:
      memory: 256Mi
      cpu: "0.1"
    max:
      memory: 2Gi
      cpu: "2"
    type: Container

---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
    section: tools
spec:
  ports:
    - name: http-main
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: sonarqube
    section: tools
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
    section: tools
spec:
  selector:
    matchLabels:
      app: sonarqube
      section: tools
  serviceName: sonarqube
  replicas: 1
  template:
    metadata:
      labels:
        app: sonarqube
        section: tools
    spec:
      containers:
        - name: sonarqube
          image: sonarqube:lts
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
              protocol: TCP
#          readinessProbe:
#            httpGet:
#              path: /api/system/health
#              port: 9000
#            initialDelaySeconds: 60
#            periodSeconds: 30
#            failureThreshold: 6
#          livenessProbe:
#            httpGet:
#              path: /api/system/health
#              port: 9000
#            initialDelaySeconds: 180
#            periodSeconds: 60
#            failureThreshold: 10
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
              cpu: "2"
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube-data
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube-extensions
  volumeClaimTemplates:
  - metadata:
      name: sonarqube-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 8Gi
  - metadata:
      name: sonarqube-extensions
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-0
  namespace: sonarqube
  labels:
    app: sonarqube
    section: tools
spec:
  ports:
    - name: http-main
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: sonarqube
    section: tools
    statefulset.kubernetes.io/pod-name: sonarqube-0

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
    section: tools
  annotations:
    cert-manager.io/cluster-issuer: dev-ca-issuer
    cert-manager.io/common-name: sonarqube.dpetrenko.ru
    cert-manager.io/subject-organizations: "home dev lab"
    cert-manager.io/subject-countries: "RU"
    cert-manager.io/subject-localities: "Voronezh"
    cert-manager.io/duration: "9125h"
    cert-manager.io/renew-before: "360h"
    cert-manager.io/usages: "server auth"
    cert-manager.io/private-key-algorithm: RSA
    cert-manager.io/private-key-encoding: "PKCS8"
    cert-manager.io/private-key-size: "4096"
    cert-manager.io/private-key-rotation-policy: Always
    nginx.ingress.kubernetes.io/proxy-body-size: 1g
spec:
  ingressClassName: "system-ingress"
  rules:
    - host: sonarqube.dpetrenko.ru
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarqube-0
                port:
                  number: 9000
  tls:
    - hosts:
      - sonarqube.dpetrenko.ru
      secretName: sonarqube-tls
