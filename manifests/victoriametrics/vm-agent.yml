---
apiVersion: v1
kind: Service
metadata:
  name: vm-agent
  namespace: monitoring
  labels:
    app: vm-agent
spec:
  selector:
    app: vm-agent
  ports:
    - protocol: TCP
      port: 8429
      targetPort: 8429

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vm-agent
  namespace: monitoring
  labels:
    app: vm-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vm-agent
  template:
    metadata:
      labels:
        app: vm-agent
    spec:
      containers:
        - name: vm-agent
          image: victoriametrics/vmagent:v1.66.1
          ports:
            - containerPort: 8429
          resources:
            requests:
              memory: "512Mi"
              cpu: "0.256"
              ephemeral-storage: "1Gi"
            limits:
              memory: "1Gi"
              cpu: "0.512"
              ephemeral-storage: "2Gi"
          volumeMounts:
            - name: config
              mountPath: /config
          args:
            - -promscrape.config=/config/vmagent.yaml
            - -remoteWrite.url=http://vm-single.monitoring:8428/api/v1/write  # Укажите URL вашего vm-single
      volumes:
        - name: config
          configMap:
            name: vm-agent-config


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vm-agent-config
  namespace: monitoring
data:
  vmagent.yaml: |
    global:
      scrape_interval: 10s
    external_labels:
      datacenter: my_dev
      instance: vmagent
    scrape_configs:
      - job_name: vmagent
        static_configs:
          - targets: ["localhost:8429"]
      - job_name: "kubernetes-apiservers"
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      - job_name: "kubernetes-nodes-kubelet"
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics
      - job_name: "kubernetes-nodes-cadvisor"
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        honor_timestamps: false
      - job_name: "kubernetes-pods"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: drop
            source_labels: [__meta_kubernetes_pod_container_init]
            regex: true
          - action: keep_if_equal
            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_number]
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: service
          - source_labels: [__meta_kubernetes_service_name]
            target_label: job
            replacement: ${1}
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node
      - job_name: "kube-state-metrics"
        static_configs:
          - targets: ['kube-state-metrics.monitoring.svc:8080']
      - job_name: "node-exporter"
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: node-exporter;metrics
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: job
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vm-agent
  namespace: monitoring
  labels:
    app: vm-agent
    section: monitoring
  annotations:
    cert-manager.io/cluster-issuer: dev-ca-issuer
    cert-manager.io/common-name: vm-agent.dpetrenko.ru
    cert-manager.io/subject-organizations: "home dev lab"
    cert-manager.io/subject-countries: "RU"
    cert-manager.io/subject-localities: "Voronezh"
    cert-manager.io/duration: "9125h"
    cert-manager.io/renew-before: "360h"
    cert-manager.io/usages: "server auth"
    cert-manager.io/private-key-algorithm: RSA
    cert-manager.io/private-key-encoding: "PKCS8"
    cert-manager.io/private-key-size: "4096"
    cert-manager.io/private-key-rotation-policy: Always
    nginx.ingress.kubernetes.io/proxy-body-size: 1g
spec:
  ingressClassName: "system-ingress"
  rules:
    - host: vm-agent.dpetrenko.ru
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vm-agent
                port:
                  number: 8429
  tls:
    - hosts:
      - vm-agent.dpetrenko.ru
      secretName: victoria-agent-tls


